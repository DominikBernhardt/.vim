global !p
def extractParams(t):
  if t:
    t = t.split(', ')
  return t
endglobal

global !p
def paramsToComs(t):
  if t:
    t = extractParams(t)
    t = [ ("#   " + m + " -\n") for m in t ]	# prepend '#' and append newline
    t = "".join(t)
    t = t[:len(t)-2]				# remove last newline
  return t
endglobal

snippet function "function declaration" A
function( $1 )
    $0
end;
endsnippet

snippet if "if" b
if ${1:condition} then
    ${0:${VISUAL}}
fi;
endsnippet

snippet ife "if else" b
if ${1:condition} then
    ${2:${VISUAL}}
else
    $0
fi;
endsnippet

snippet for "for" b
for ${1:i} in ${2:[ 1 .. ${3:n} ]} do
    ${0:${VISUAL}}
od;
endsnippet

snippet break "Break Point" b
Error( "Break Point - $0" );
endsnippet

snippet ato "atomic" b
atomic ${1:readonly $2} do
    ${0:${VISUAL}}
od;
endsnippet

snippet List "List"
List( ${0:${VISUAL}}, x -> $1 );
endsnippet

snippet funcblock "Insert gap function block" b
##################################################
# function $1
# Input:
`!p snip.rv = paramsToComs(t[2])`
#
# Output:
#   $3
##################################################
${1:${VISUAL:NAME}} := function( ${2:PARAM} )
    $4
    return ${3:RETURN VALUE};
end;
endsnippet

snippet InstallMethod "Insert InstallMethod block" b
##################################################
# Operation $1
# Input:
`!p snip.rv = paramsToComs(t[4])`
# Filters:
#   $3
#
# Output:
#   $5
##################################################
InstallMethod( ${1:${VISUAL:NAME}},
${2:DESCRIPTION},
[ ${3:FILTERS} ],
function( ${4:PARAM} )
    $6
    return ${5:RETURN VALUES};
end );
endsnippet

snippet _C "automatic _SERSI.C." A
_SERSI.C.
endsnippet

snippet _S "automatic _SERSI." A
_SERSI.
endsnippet

snippet header "Insert GAP file header" b
#############################################################################
##
##                             $1 package
##  ${2:FILENAME}
##                                                          Sergio Siccha
##
##  Copyright...
##
##  ${3:DESCRIPTION}
##
#############################################################################
$0
endsnippet
