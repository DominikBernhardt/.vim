global !p
def extractParams(t):
  if t:
    t = t.split(', ')
  return t
endglobal

global !p
def paramsToComs(t):
  if t:
    t = extractParams(t)
    t = [ ("#   " + m + " - \n") for m in t ]	# prepend '#' and append newline
    t = "".join(t)
    t = t[:len(t)-2]				# remove last newline
  return t
endglobal

snippet if "if" b
if ${1:condition} then
${0:${VISUAL}}
fi;
endsnippet

snippet ife "if else" b
if ${1:condition} then
${2:${VISUAL}}
else
$0
fi;
endsnippet

snippet for "for" b
for ${1:i} in ${2:[1..${3:n}]} do
${0:${VISUAL}}
od;
endsnippet

snippet f "Insert gap function block" b
###############################
# function $1
# Input:
`!p snip.rv = paramsToComs(t[2])`
#
# Output:
#   ${3:RETURN VALUES}
###############################
${1:${VISUAL:NAME}} := function( ${2:PARAM} )
$0
end;
endsnippet

snippet insm "Insert InstallMethod block" b
###############################
# Operation $1
# Input:
`!p snip.rv = paramsToComs(t[4])`
# Filters:
#   $3
#
# Output:
#   $5
###############################
InstallMethod( ${1:${VISUAL:NAME}}, ${2:DESCRIPTION},
[ ${3:FILTERS} ],
function( ${4:PARAM} )
$0
  return ${5:RETURN VALUES}
end );
endsnippet

snippet header "Insert GAP file header" b
#############################################################################
##
##                             $1 package
##  ${2:FILENAME}
##                                                          Sergio Siccha
##
##  Copyright...
##
##  ${3:DESCRIPTION}
##
#############################################################################
$0
endsnippet
